import ssl
import urllib3
import os

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
ssl._create_default_https_context = ssl._create_unverified_context
os.environ['PYTHONHTTPSVERIFY'] = '0'

from flask import Flask, request, jsonify
import json
from datetime import datetime

app = Flask(__name__)

# Resto do seu c√≥digo continua igual...


# Carregar bases de dadosa
def carregar_dados():
    """Carrega as bases de medicamentos e taxonomia"""
    try:
        with open('medicamentos_slack.json', 'r', encoding='utf-8') as f:
            medicamentos = json.load(f)
        
        with open('taxonomia_slack.json', 'r', encoding='utf-8') as f:
            taxonomia = json.load(f)
            
        return medicamentos, taxonomia
    except FileNotFoundError:
        return [], {}

# Fun√ß√£o de busca de medicamentos
def buscar_medicamento(nome):
    """Busca medicamento na base simplificada"""
    medicamentos, taxonomia = carregar_dados()
    
    nome_lower = nome.lower().strip()
    
    for med in medicamentos:
        if nome_lower in med['nome'].lower():
            return {
                'encontrado': True,
                'nome': med['nome'],
                'categoria': med['categoria'],
                'confiabilidade': med['confiabilidade'],
                'emoji': 'üü¢' if med['confiabilidade'] == 'alta' else 'üü°'
            }
    
    return {
        'encontrado': False,
        'sugestao': 'Use a plataforma completa para an√°lise detalhada'
    }

# Rota principal do Slack - Comando /categorizar
@app.route('/slack/categorizar', methods=['POST'])
def slack_categorizar():
    """Processa comando /categorizar do Slack"""
    
    # Obter dados do Slack
    slack_data = request.form
    produto = slack_data.get('text', '').strip()
    
    if not produto:
        return jsonify({
            "response_type": "ephemeral",
            "text": "‚ÑπÔ∏è  Uso: /categorizar [nome do medicamento]\nExemplo: /categorizar dipirona"
        })
    
    # Buscar medicamento
    resultado = buscar_medicamento(produto)
    
    if resultado['encontrado']:
        resposta = f"üè• **{resultado['nome'].title()}**\n" +                   f"üìÇ {resultado['categoria']} ({resultado['emoji']} {resultado['confiabilidade']})\n" +                   f"‚ö° _Consulta r√°pida - Para an√°lise completa use a plataforma principal_"
    else:
        resposta = f"‚ùì **{produto.title()}** n√£o encontrado na base r√°pida\n" +                   f"üí° {resultado['sugestao']}\n" +                   f"üîó Use: https://plataforma-drauzio.com"
    
    return jsonify({
        "response_type": "in_channel",
        "text": resposta
    })

# Rota para comando /ajuda
@app.route('/slack/ajuda', methods=['POST'])
def slack_ajuda():
    """Mostra ajuda dos comandos"""
    
    ajuda_text = """
ü§ñ **Drauzio Bot - Comandos Dispon√≠veis**

‚ö° **Consultas R√°pidas:**
‚Ä¢ `/categorizar [medicamento]` - Categoriza√ß√£o b√°sica
‚Ä¢ `/ean [c√≥digo]` - Busca por EAN (em breve)
‚Ä¢ `/ajuda` - Esta mensagem

üè• **Plataforma Completa:**
‚Ä¢ An√°lise cl√≠nica detalhada
‚Ä¢ Processamento de lotes
‚Ä¢ Relat√≥rios profissionais
‚Ä¢ Precis√£o de 98.6%

üí° **Dica:** Use o bot para consultas r√°pidas e a plataforma para an√°lises completas!
    """
    
    return jsonify({
        "response_type": "ephemeral", 
        "text": ajuda_text.strip()
    })

# Rota de status/health check
@app.route('/status')
def status():
    """Verifica se o servi√ßo est√° funcionando"""
    medicamentos, taxonomia = carregar_dados()
    
    return jsonify({
        "status": "online",
        "timestamp": datetime.now().isoformat(),
        "medicamentos_carregados": len(medicamentos),
        "categorias_disponiveis": len(taxonomia)
    })

if __name__ == '__main__':
    print("üöÄ Iniciando Servidor Drauzio Slack Bot...")
    print("üìç Endpoints dispon√≠veis:")
    print("   POST /slack/categorizar")
    print("   POST /slack/ajuda") 
    print("   GET  /status")
    print("\nüîó Configure no Slack:")
    print("   URL: https://seu-servidor.com/slack/categorizar")
    
    app.run(debug=True, host='0.0.0.0', port=5000)
